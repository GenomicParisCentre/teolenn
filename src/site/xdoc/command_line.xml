<?xml version="1.0" encoding="UTF-8"?>

<document>

<properties>
  <title>Command line and configuration files</title>
  <author email="jourdren@biologie.ens.fr">Laurent Jourdren</author>
</properties>

<body>


    
  <section name="The command line">

  <p>The only user interface of Teolenn is the command line. The syntax and the
  available options can be get using the following command :</p>
<source>
$ teolenn.sh -h
</source>

  <p>The program show you the next output:</p>

<source>
usage: teolenn [options] design [genome [genome_masked [output_dir]]]
 -about              display information about this software
 -conf &lt;file&gt;        configuration file to use
 -h,--help           display this help
 -license            display information about the license of this
                     software
 -log &lt;file&gt;         external log file
 -loglevel &lt;level&gt;   log level
 -silent             don't show log on console
 -threads &lt;number&gt;   number of threads to use
 -v,--verbose        display external tools output
 -version            show version of the software
</source>

    <subsection name="arguments">

      <p>The Toelenn command line has 4 standards arguments (without options):</p>
      <ul>
	<li><b>design</b>: This is the design file to read. This file contains all the parameters to run the design. This is the only argument of Teolenn that is mandatory.</li>
	<li><b>genome</b>: Is the path to the genome file (one file in fasta format). This argument is optional as this parameter can be set in the design file.</li>
	<li><b>genome_masked</b>: Is the path to the genome masked file (one file in fasta format). This argument is optional as this parameter can be set in the design file.</li>
	<li><b>output_dir</b>: Is the output directory for the file generated by Teolenn.</li>
      </ul>
    </subsection>

    <subsection name="-about">
      <p>When you run Toelenn with this option, you will get information about
      this software and then returns to the shell.</p>
    </subsection>
    <subsection name="-conf &lt;file&gt;">
      <p>With this option, Toelenn will be load the <b>file</b> as configuration file. See the <a href="#configuration_file">configuration section</a> for more information.</p>
    </subsection>
    <subsection name="-license">
      <p>When you run Toelenn with this option, you will get information about Teolenn license and and then returns to the shell.</p>
    </subsection>
    <subsection name="-log &lt;file&gt;">
      <p>Define the log file.</p>
    </subsection>
    <subsection name="-loglevel &lt;level&gt;">
      <p>Set the log level, there are 4 log level define in Teolenn : <b>Severe</b>, <b>Warning</b>, <b>Info</b> and <b>Fine</b>. By default the log level is set to <b>Info</b></p>
    </subsection>
    <subsection name="-silent">
      <p>Don't show log on the console.</p>
    </subsection>
    <subsection name="-threads">
      <p>Set the number of threads to use use when compute design. By default the value is set to the number of available processor (cores in multi-cores processor). If the value is lower than 1, use the default value.</p>
    </subsection>
    <subsection name="-v">
      <p>When this option is enable, the output of external tools used by Teolenn will be displayed on the console.</p>
    </subsection>
    <subsection name="-version">
      <p>When you run Toelenn with this option, you will get information about Toelenn version and and then returns to the shell.</p>
    </subsection>

  </section>
  <section name="Toelenn configuration file">
  	<p>Some global parameters of Teolenn such as the path of the external tools can be set in a configuration file. There are two ways use this configuration file:</p>
  	<ul>
  		<li>Create a <code>~/.teolenn</code> file.</li>
  		<li>use the <b>-conf &lt;file&gt;</b> option of Toelenn command line. The <code>~/.teolenn</code> file will not be read.</li>
  	</ul>

	<p>The next table summaries the available parameters for Toelenn configuration file:</p> 

	<table>
	  <tr><th>Parameter</th><th>Type</th><th>Description</th></tr>
	  <tr><td>soap.path</td><td>String</td><td>The soap executable path. By default Toelenn use the its embedded version if exists for your platform. When this parameter is set the embedded version will not be used.</td></tr>
	  <tr><td>gt.path</td><td>String</td><td>The genometools executable path. By default Toelenn use the its embedded version if exists for your platform. When this parameter is set the embedded version will not be used.</td></tr>
	  <tr><td>std.output</td><td>Boolean</td><td>Show the output of the external executable. This parameter as the same effect than <b>-v</b> option of Teolenn command line.</td></tr>
	  <tr><td>max.threads</td><td>Integer</td><td>Set the maximal number of threads. This parameter as the same effect than <b>-threads</b> option of Teolenn command line.</td></tr>
	</table>
  	
	<subsection name="Toelenn configuration file sample">
  	
  <source>
# This is an example of configuration file for Teolenn.
# You need to use the -conf parameter or rename this file to
# $HOME/.teolenn to enable it.

# SOAP path.
# By default Teolenn use the its embedded version if exists for your platform.
soap.path=/usr/local/soap/soap

# Genome tools path.
# By default Toelenn use the its embedded version if exists for your platform.
gt.path=/usr/local/gt/gt

# Show the output of external executable to the user.
std.output=false

# Set the maximal number of threads.
# If value if &lt;1 Toelenn use the available processor as value.
max.threads=-1</source>
  	
  	</subsection>
  </section>

</body>
</document>
